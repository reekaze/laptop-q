// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  ADMIN
  BASIC
}

model User {
  id             String   @id @default(uuid())
  type           UserType
  username       String
  email          String   @unique
  hashedPassword String
  Order          Order[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          String @id @default(uuid())
  name        String
  brand       String
  description String
  rate        Float  @default(0.0)
  sold        Int    @default(0)
  variantType String

  ProductVariants ProductVariant[]
  ProductImages   ProductImage[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductVariant {
  id   String @id @default(uuid())
  name String

  Product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String

  quantity Int
  price    Float

  OrderItems OrderItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductImage {
  id   String @id @default(uuid())
  link String

  Product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum OrderStatus {
  PROCESS
  DELIVER
}

model Order {
  id String @id @default(uuid())

  User   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  status        OrderStatus @default(PROCESS)
  address       String
  lat           Float
  long          Float
  deliveryPrice Float
  totalPrice    Float

  OrderItems OrderItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrderItem {
  id String @id @default(uuid())

  ProductVariant   ProductVariant @relation(fields: [productVariantId], references: [id], onDelete: SetDefault)
  productVariantId String

  Order   Order  @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId String

  quantity Int
  price    Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
